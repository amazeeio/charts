apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "lagoon-idler.fullname" . }}
  labels:
    {{- include "lagoon-idler.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "lagoon-idler.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "lagoon-idler.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "lagoon-idler.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: kube-rbac-proxy
        securityContext:
          {{- toYaml .Values.kubeRBACProxy.securityContext | nindent 10 }}
        image: "{{ .Values.kubeRBACProxy.image.repository }}:{{ .Values.kubeRBACProxy.image.tag }}"
        imagePullPolicy: {{ .Values.kubeRBACProxy.image.pullPolicy }}
        args:
        - "--secure-listen-address=0.0.0.0:8443"
        - "--upstream=http://127.0.0.1:8080/"
        - "--logtostderr=true"
        - "--v=10"
        ports:
        - containerPort: 8443
          name: https
        resources:
          {{- toYaml .Values.kubeRBACProxy.resources | nindent 10 }}
      - name: manager
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion}}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        - /manager
        {{- if or .Values.args .Values.extraArgs}}
        args:
        {{- with .Values.args }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.extraArgs }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- end }}
        env:
        {{- if .Values.vars.lagoonApiUrl}}
        - name: LAGOON_API_URL
          value: '{{ .Values.vars.lagoonApiUrl }}'
        {{- end}}
        {{- if .Values.vars.lagoonApiToken}}
        - name: LAGOON_API_TOKEN
          value: '{{ .Values.vars.lagoonApiToken }}'
        {{- end}}
        {{- if .Values.vars.elasticsearchUser}}
        - name: ELASTICSEARCH_USER
          value: '{{ .Values.vars.elasticsearchUser }}'
        {{- end}}
        {{- if .Values.vars.elasticsearchPass}}
        - name: ELASTICSEARCH_PASS
          value: '{{ .Values.vars.elasticsearchPass }}'
        {{- end}}
        {{- if .Values.vars.elasticsearchHost}}
        - name: ELASTICSEARCH_HOST
          value: '{{ .Values.vars.elasticsearchHost }}'
        {{- end}}
        {{- if .Values.vars.cliCron}}
        - name: CLI_CRON
          value: '{{ .Values.vars.cliCron }}'
        {{- end}}
        {{- if .Values.vars.serviceCron}}
        - name: SERVICE_CRON
          value: '{{ .Values.vars.serviceCron }}'
        {{- end}}
        {{- if .Values.vars.enableServiceIdler}}
        - name: ENABLE_SERVICE_IDLER
          value: '{{ .Values.vars.enableServiceIdler }}'
        {{- end}}
        {{- if .Values.vars.enableCliIdler}}
        - name: ENABLE_CLI_IDLER
          value: '{{ .Values.vars.enableCliIdler }}'
        {{- end}}
        {{- if .Values.vars.podIntervalCheck}}
        - name: POD_INTERVAL_CHECK
          value: '{{ .Values.vars.podIntervalCheck }}'
        {{- end}}
        {{- if .Values.vars.elasticIntervalCheck}}
        - name: ELASTIC_INTERVAL_CHECK
          value: '{{ .Values.vars.elasticIntervalCheck }}'
        {{- end}}
        {{- if .Values.customSelectors.enabled}}
        - name: SELECTORS_YAML_FILE
          value: "/custom/selectors.yaml"
        volumeMounts:
          - name: {{ include "lagoon-idler.fullname" . }}-selectors
            mountPath: "/custom"
            readOnly: true
        {{- end}}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
      {{- if .Values.customSelectors.enabled}}
      volumes:
        - name: {{ include "lagoon-idler.fullname" . }}-selectors
          configMap:
            name: {{ include "lagoon-idler.fullname" . }}-selectors
            items:
            - key: "selectors.yaml"
              path: "selectors.yaml"
      {{- end}}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
