kube-prometheus-stack:
  enabled: true
  # selectively enable only record rules, not alerts
  defaultRules:
    create: true
    rules:
      # recording (used by default dashboards)
      k8s: true
      kubeApiserver: true
      kubePrometheusNodeRecording: true
      kubeScheduler: true
      node: true
      # alerting
      alertmanager: false
      etcd: false
      general: false
      kubeApiserverAvailability: false
      kubeApiserverError: false
      kubeApiserverSlos: false
      kubelet: false
      kubePrometheusGeneral: false
      kubePrometheusNodeAlerting: false
      kubernetesAbsent: false
      kubernetesApps: false
      kubernetesResources: false
      kubernetesStorage: false
      kubernetesSystem: false
      kubeStateMetrics: false
      network: false
      prometheus: false
      prometheusOperator: false
      time: false

  # default service monitor configuration
  # TODO: trim the metrics down further

  alertmanager:
    serviceMonitor:
      selfMonitor: true
      metricRelabelings:
      - action: keep
        regex: 'alertmanager_alerts.+'
        sourceLabels: [__name__]

  grafana:
    serviceMonitor:
      selfMonitor: true
      metricRelabelings: []
      # - action: keep
      #   regex: 'kube_(daemonset|deployment|pod|namespace|node|statefulset).+'
      #   sourceLabels: [__name__]

  kubeApiServer:
    enabled: true
    serviceMonitor:
      metricRelabelings: []
      # - action: keep
      #   regex: 'kube_(daemonset|deployment|pod|namespace|node|statefulset).+'
      #   sourceLabels: [__name__]

  kubelet:
    enabled: true
    serviceMonitor:
      cAdvisorMetricRelabelings: []
      # - sourceLabels: [__name__, image]
      #   separator: ;
      #   regex: container_([a-z_]+);
      #   replacement: $1
      #   action: drop
      # - sourceLabels: [__name__]
      #   separator: ;
      #   regex: container_(network_tcp_usage_total|network_udp_usage_total|tasks_state|cpu_load_average_10s)
      #   replacement: $1
      #   action: drop
      probesMetricRelabelings: []
      # - sourceLabels: [__name__, image]
      #   separator: ;
      #   regex: container_([a-z_]+);
      #   replacement: $1
      #   action: drop
      # - sourceLabels: [__name__]
      #   separator: ;
      #   regex: container_(network_tcp_usage_total|network_udp_usage_total|tasks_state|cpu_load_average_10s)
      #   replacement: $1
      #   action: drop
      metricRelabelings: []
      # - sourceLabels: [__name__, image]
      #   separator: ;
      #   regex: container_([a-z_]+);
      #   replacement: $1
      #   action: drop
      # - sourceLabels: [__name__]
      #   separator: ;
      #   regex: container_(network_tcp_usage_total|network_udp_usage_total|tasks_state|cpu_load_average_10s)
      #   replacement: $1
      #   action: drop

  kubeControllerManager:
    enabled: false
    serviceMonitor:
      metricRelabelings: []
      # - action: keep
      #   regex: 'kube_(daemonset|deployment|pod|namespace|node|statefulset).+'
      #   sourceLabels: [__name__]

  coreDns:
    enabled: false
    serviceMonitor:
      metricRelabelings: []
      # - action: keep
      #   regex: 'kube_(daemonset|deployment|pod|namespace|node|statefulset).+'
      #   sourceLabels: [__name__]

  kubeEtcd:
    enabled: true
    serviceMonitor:
      metricRelabelings: []
      # - action: keep
      #   regex: 'kube_(daemonset|deployment|pod|namespace|node|statefulset).+'
      #   sourceLabels: [__name__]

  kubeScheduler:
    enabled: true
    serviceMonitor:
      metricRelabelings: []
      # - action: keep
      #   regex: 'kube_(daemonset|deployment|pod|namespace|node|statefulset).+'
      #   sourceLabels: [__name__]

  kubeProxy:
    enabled: true
    serviceMonitor:
      metricRelabelings: []
      # - action: keep
      #   regex: 'kube_(daemonset|deployment|pod|namespace|node|statefulset).+'
      #   sourceLabels: [__name__]

  kubeStateMetrics:
    enabled: true
    serviceMonitor:
      metricRelabelings: []
      # - action: keep
      #   regex: 'kube_(daemonset|deployment|pod|namespace|node|statefulset).+'
      #   sourceLabels: [__name__]

  nodeExporter:
    enabled: true
    serviceMonitor:
      metricRelabelings: []
      # - sourceLabels: [__name__]
      #   separator: ;
      #   regex: ^node_mountstats_nfs_(event|operations|transport)_.+
      #   replacement: $1
      #   action: drop

  prometheusOperator:
    serviceMonitor:
      selfMonitor: true
      metricRelabelings: []
      # - action: keep
      #   regex: 'kube_(daemonset|deployment|pod|namespace|node|statefulset).+'
      #   sourceLabels: [__name__]

  prometheus:
    serviceMonitor:
      selfMonitor: true
      metricRelabelings: []
      # - action: keep
      #   regex: 'kube_(daemonset|deployment|pod|namespace|node|statefulset).+'
      #   sourceLabels: [__name__]
